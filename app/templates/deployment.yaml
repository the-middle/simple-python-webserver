apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app.name }}
  labels:
    app.kubernetes.io/name: {{ .Values.app.name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ .Values.app.chart }}
  annotations:
    rollme: {{ randAlphaNum 5 | quote }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.app.name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.app.name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
    spec:
      serviceAccountName: {{ .Values.rbac.serviceAccount.name | quote }}
      restartPolicy: Always
      containers:
        - name: {{ .Values.app.name | quote }}
          image: {{ .Values.app.image }}
          imagePullPolicy: {{ .Values.app.pullPolicy }}
          env:
            {{- range $key, $val := .Values.app.env }}
            - name: {{ $key }}
              value: {{ $val | quote }}
            {{- end }}
            - name: "EMAIL_PASSWORD"
              {{- with .Values.app.secrets.EMAIL_PASSWORD }}
                {{- toYaml . | nindent 14 }}
              {{- end }}
            - name: "DB_PASSWORD"
              {{- with .Values.app.secrets.DB_PASSWORD }}
                {{- toYaml . | nindent 14 }}
              {{- end }}
          ports:
            - containerPort: {{ .Values.app.service.targetPort }}
          {{- with .Values.app.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
